MINISHELL TODO LIST
=================

1. PARSING [Priorité: HAUTE]
   ✅ Parsing des opérateurs de redirection (<, >, >>, <<)
   ✅ Gestion des erreurs de syntaxe (>>>, <<<)
   ✅ Parsing des pipes (|)
   ✅ Expansion des variables ($VAR)
   ✅ Structure de tokenisation améliorée (t_token_list)
   ☐ Gestion du $?
   ☐ Tests exhaustifs du parsing
   ☐ Gestion des erreurs de syntaxe supplémentaires (||, &&)

2. EXÉCUTION BASIQUE [Priorité: HAUTE]
   ✅ Recherche d'exécutables dans PATH
   ✅ Implémentation fork() et execve()
   ✅ Structure de base pour l'exécution
   ☐ Gestion des processus (wait)
   ☐ Gestion des codes de retour ($?)
   ☐ Gestion des erreurs d'exécution

3. BUILT-INS [Priorité: HAUTE]
   ☐ echo (avec option -n)
   ☐ pwd (sans options)
   ☐ env (sans options/arguments)
   ☐ exit (avec gestion des arguments)
   ☐ cd (chemins relatifs/absolus)
   ☐ export (sans options)
   ☐ unset (sans options)

4. REDIRECTIONS [Priorité: MOYENNE]
   ✅ Redirection entrée (<)
   ✅ Redirection sortie (>)
   ✅ Redirection sortie append (>>)
   ✅ Structure de base pour heredoc (<<)
   ☐ Implémentation complète du heredoc
      - ✅ Lecture jusqu'au délimiteur
      - ☐ Gestion des variables dans heredoc
      - ☐ Stockage temporaire du contenu
   ☐ Gestion des erreurs de redirection (fichiers inexistants, permissions)

5. PIPES [Priorité: MOYENNE]
   ✅ Parsing des pipes
   ☐ Création des pipes
   ☐ Redirection entrée/sortie entre processus
   ☐ Gestion des processus multiples
   ☐ Gestion des erreurs de pipe

6. GESTION DES SIGNAUX [Priorité: BASSE]
   ☐ ctrl-C (nouveau prompt)
   ☐ ctrl-D (quitter)
   ☐ ctrl-\ (rien faire)
   ☐ Gestion des signaux dans les processus enfants

7. NETTOYAGE ET OPTIMISATION [Priorité: BASSE]
   ✅ Structure de code améliorée
   ✅ Documentation du code
   ☐ Gestion des fuites mémoire
   ☐ Tests exhaustifs
   ☐ Gestion des cas limites
   ☐ Optimisation des performances

NOTES:
- Les tâches sont organisées par dépendances (les premières sont nécessaires pour les suivantes)
- Priorité HAUTE = Nécessaire pour les fonctionnalités de base
- Priorité MOYENNE = Fonctionnalités importantes mais qui dépendent des bases
- Priorité BASSE = Peut être fait en dernier

PROGRESSION ACTUELLE : ~45%
- ✅ Parsing basique des commandes
- ✅ Gestion des quotes simples/doubles
- ✅ Historique des commandes
- ✅ Affichage du prompt
- ✅ Parsing des redirections
- ✅ Gestion des erreurs de syntaxe
- ✅ Structure de base pour l'exécution
- ✅ Structure de code améliorée avec documentation
- ✅ Gestion des variables d'environnement de base

PROCHAINES PRIORITÉS :
1. Implémenter les built-ins de base (echo, pwd, env)
2. Finaliser la gestion des heredocs
3. Implémenter la gestion des pipes multiples